	1. Go to EBS and create a new volume with desired capacity from aws console
then to go command line and run 

lsblk
mkfs -t ext4 /dev/nvme2n1
sudo mount /dev/nvme2n1 /mnt
sudo rsync -avih /home2/ubuntu/* /mnt/
once the data is copied then stop all the services; e.g, realm, logstash,
then again run sudo rsync -avih /home2/ubuntu/* /mnt/
then stop the server and detach the 2 volumes(old and new) from instance.
Then attache the new volume and start the instance


##How To Attach And Permanent Mount An EBS Volume To EC2 Linux Instance?
https://medium.com/@dharanviper/how-to-attach-and-permanent-mount-an-ebs-volume-to-ec2-linux-instance-dec32deba9f2

Mount An EBS Volume To EC2 Linux

Step 1: Head over to EC2 –> Volumes and create a new volume of your preferred size and type.
Step 2: Select the created volume, right click and select the “attach volume” option.
Step 3: Select the instance from the instance text box as shown below.And click on the Attach .

Step 4: Now, login to your ec2 instance and list the available disks using the following command.
[root@ip-000–00–00–00 ~]# lsblk
The above command will list the disk you attached to your instance.

Step 5: Check if the volume has any data using the following command.
[root@ip-000–00–00–00 ~]#file -s /dev/xvdc
If the above command output shows “/dev/xvdc: Linux rev 1.0 ext4 filesystem data, UUID=b8ea0672–3878–48b9-bd67–2fe45f0524a0 (needs journal recovery) (extents) (large files) (huge files)”, it means your volume is empty.

Step 6: Format the volume to ext4 filesystem using the following command.
[root@ip-000–00–00–00 ~]#mkfs -t ext4 /dev/xvdc

Step 7: Create a directory of your choice to mount our new ext4 volume. I am using the name “newvolume”
[root@ip-000–00–00–00 ~]#mkdir /newvolume

Step 8: Mount the volume to “newvolume” directory using the following command.
[root@ip-000–00–00–00 ~]#mount /dev/xvdc /newvolume/

Step 9: cd into newvolume directory and check the disk space for confirming the volume mount.
[root@ip-000–00–00–00 ~]#cd /newvolume
[root@ip-000–00–00–00 /newvolume]#df -h
The above command would show the free space in the newvolume directory.

EBS Automount On Reboot
By default on every reboot the EBS volumes other than root volume will get unmounted. To enable automount, you need to make an entry in the /etc/fstab file.
Step 1 : Back up the /etc/fstab file.
[root@ip-000–00–00–00 ~]#cp /etc/fstab /etc/fstab.bak

Step 2 : Open /etc/fstab file and
[root@ip-000–00–00–00 ~]#Vim /etc/fstab

Step 3 : Make an entry in the following format.
device_name mount_point file_system_type fs_mntops fs_freq fs_passno
for example : /dev/xvdc /newvolume ext4 defaults 0 0

Step 4 : Execute the following command to check id the fstab file has any error.
[root@ip-000–00–00–00 ~]#mount -a
If the above command shows no error, it means your fstab entry is good.
Now, on every reboot the extra EBS volumes will get mounted automatically.
