# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
#server {
#       listen <port> default_server;
#       listen [::]:<port> default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

#       root /var/www/html;

        # Add index.php to the list if you are using PHP
#       index index.html index.htm index.nginx-debian.html;

#       server_name _;

#       location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
#               try_files $uri $uri/ =404;
#       }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php7.0-cgi alone:
        #       fastcgi_pass 127.0.0.1:9000;
        #       # With php7.0-fpm:
        #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
#}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen <port>;
#       listen [::]:<port>;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}



server {
        listen          <port>;
        server_name     <serverIP>;
#        return  301 https://www.raytech.com$request_uri;

        location /nginx_status {
                stub_status on;
                access_log off;
                allow <serverIP>;
                deny all;
                }
}

##################################  ###################################################

upstream backend1 {
    server <serverIP>:<port>;
    server <serverIP>:<port>;
}

upstream ws-backend {
    server <serverIP>:<port>;
}


upstream mediaserver1 {
    server <serverIP>:<port>;
    server <serverIP>:<port>;
}


server {
        listen          <port>;
        server_name     www.raytech.com raytech.com;
        return  301 https://www.raytech.com$request_uri;

#        location /nginx_status {
#                stub_status on;
#                access_log off;
#                allow all;
               # deny all;
#                }
}

server {
        server_name     raytech.com;
        listen          443 ssl;
        ssl_certificate     /etc/nginx/raytechssl/raytechbundle.crt;
        ssl_certificate_key /etc/nginx/raytechssl/raytech.key;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        return          301 https://www.raytech.com$request_uri;
}


server {
    listen              443 ssl;
    server_name         www.raytech.com;

    #ssl on;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    ssl_certificate     /etc/nginx/raytechssl/raytechbundle.crt;
    ssl_certificate_key /etc/nginx/raytechssl/raytech.key;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        error_page 404 /404.html;
        location = /404.html {
                root /usr/share/nginx/html;
        }


       location / {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_read_timeout 300s;
                proxy_ignore_client_abort on;
                proxy_pass http://<serverIP>;
       }


        location /app {
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass http://<serverIP>/app;
                proxy_read_timeout 300s;
                proxy_ignore_client_abort on;
                add_header 'Access-Control-Allow-Origin' '*';
        }

        location ~ ^/(login|about) {
                 return 301 https://www.raytech.com/app$request_uri;
                 add_header 'Access-Control-Allow-Origin' '*';
       }


        location /text {
                rewrite ^(.*)$ https://www.raytech.com/car-fleet permanent;
        }

        
        rewrite ^/templates(.*)$ https://www.raytech.com/amp/$1 permanent;

        location /blog {

#               proxy_set_header X-Real-IP  $remote_addr;
#               proxy_set_header X-Forwarded-For $remote_addr;
#               proxy_set_header Host $host;
#               proxy_read_timeout 300s;
#               proxy_ignore_client_abort on;
#               proxy_pass http://<serverIP>14;
                rewrite ^(.*)$ https://www.example.com/raytech/blog permanent;
                }

  

        location ~ ^/(api|health|hello-world|ext) {
                        if (-f $document_root/maintenance-on.html) {
                        return 503;
                }
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_read_timeout 3600s;
                proxy_ignore_client_abort on;
                proxy_pass http://backend1;
        }

        location /portal {
                        if (-f $document_root/maintenance-on.html) {
                        return 503;
        }
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_read_timeout 300s;
                proxy_ignore_client_abort on;
                proxy_pass http://<serverIP>/portal;
                allow <IP>;
     
                deny all;
        }




server {
    listen              <port> ssl default_server;
    server_name         www.raytech.com;

    #ssl on;
    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
    ssl_prefer_server_ciphers on;
    ssl_certificate     /etc/nginx/raytechssl/raytechbundle.crt;
    ssl_certificate_key /etc/nginx/raytechssl/raytech.key;

        location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://<serverIP>176:90<port>;

                # WebSocket support (nginx 1.4)
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                proxy_connect_timeout       600s;
                proxy_send_timeout          600s;
                proxy_read_timeout          600s;
        }


}

